$group

    react PublicationList
        
        state
            @ status 'list'
            @ selectedItem null

        => handleArticleOpen
            param ev
            param articleItem
            log 'handleArticleOpen.id', articleItem.id
            log 'handleArticleOpen.ev', ev
            _ this.setState
                { 
                    @ status 'article'
                    @ selectedItem articleItem

        => handleArticleClose
            _ this.setState
                { 
                    @ status 'list'
                    @ selectedItem null

        => handleBookOpen
            param ev
            param bookItem
            log 'handleBookOpen.id', bookItem.id
            log 'handleBookOpen.ev', ev
            _ this.setState
                { 
                    @ status 'book'
                    @ selectedItem bookItem

        => handleBookClose
            _ this.setState
                { 
                    @ status 'list'
                    @ selectedItem null

        render
            prop jsonData
            const 
                { 
                    @ status
                    @ selectedItem
                = this.state

            log 'status', status

            return
                div
                    {
                        &&
                            + status == 'list'
                            div
                                < Paper
                                    @ style {{maxHeight: '90%', maxWidth:800, padding:10, overflow: 'auto'}}
                                    < h2 Articoli
                                    {
                                        _ jsonData.articles.sort(compareById).map
                                            =>
                                                param item
                                                return
                                                    div
                                                        @ key {item.id}
                                                        < ArticleListItem
                                                            @ item {item}
                                                            @ onClick {this.handleArticleOpen}
                                    < h2 Libri
                                    {
                                        _ jsonData.books.sort(compareById).map
                                            =>
                                                param item
                                                return
                                                    div
                                                        @ key {item.id}
                                                        < BookListItem
                                                            @ item {item}
                                                            @ onClick {this.handleBookOpen}
                    {
                        &&
                            + status == 'book'
                            div
                                < DetailBar
                                    @ title {selectedItem.title}
                                    @ id {selectedItem.id}
                                    @ showFullBar {true}
                                    @ onClick 
                                        =>
                                            _ this.handleBookClose()
                                < Book
                                    @ item {selectedItem}
                                    @ jsonData {jsonData}

                    {
                        &&
                            + status == 'article'
                            div
                                < DetailBar
                                    @ title {selectedItem.title}
                                    @ id {selectedItem.id}
                                    @ showFullBar {true}
                                    @ onClick 
                                        =>
                                            _ this.handleArticleClose()
                                < Article
                                    @ item {selectedItem}
                                    @ jsonData {jsonData}

    function ArticleListItem
        param props
        var {item, onClick} = props
        var {id, name, title} = item
        set title = (title || name)
        return
            < div
                @ onClick
                    =>
                        param event
                        _ onClick(event, item)
                div {title}
                    @ className "li-title"
                div id: {id}
                    @ className "li-id"
                div
                    @ className "li-clear"

    function Article
        param props
        var {item, jsonData} = props

        var bookObj
            _ dbGetBook                            
                @ item.book
                @ jsonData

        return
            < div 
                < PublicationAuthors
                    @ item {item}
                    @ jsonData {jsonData}
                div {item.edition}
                {
                    &&
                        + bookObj
                        div
                            span in {bookObj.title}
                < ContentText
                    @ item {item}
                    @ jsonData {jsonData} 
                {
                    &&
                        + item.url
                        div
                            @ className "web-link"
                            a {item.url}
                                href {item.url}
                                target _blank
                                rel noopener noreferrer 

                {
                    &&
                        + item.abstract
                        < Paper
                            @ className "abstract-box"
                            div abstract
                                @ className "abstract-title"
                            div
                                < ContentText
                                    @ item {item.abstract}
                                    @ jsonData {jsonData} 

    function BookListItem
        param props
        var {item, onClick} = props
        var {id, name, title} = item
        set title = (title || name)
        return
            < div
                @ onClick
                    =>
                        param event
                        _ onClick(event, item)
                div {title}
                    @ className "li-title"
                div id: {id}
                    @ className "li-id"
                div
                    @ className "li-clear"

    function Book
        param props
        var {item, jsonData} = props
        return
            < div 
                < PublicationAuthors
                    @ item {item}
                    @ jsonData {jsonData}
                div {item.edition}
                < ContentText
                    @ item {item}
                    @ jsonData {jsonData} 

    function PublicationAuthors
        param props
        var {item, jsonData} = props
        return
            div 
                {
                    _ item.authors.map
                        =>
                            param token
                            param i
                            var authObj
                                _ dbGetAuthor                            
                                    @ token
                                    @ jsonData
                            var text = (i > 0 ? ', ' : '') + token
                            if authObj
                                set text = (i > 0 ? ', ' : '') + authObj.fullname
                            return
                                span {text}
                                    @ key {i}